package pois;

import java.awt.image.BufferedImage;
import java.io.IOException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

// @author dimitragoudela

public class PointsOfInterest extends javax.swing.JFrame {

    static ArrayList<String> nameArrayList = new ArrayList<>(); //Ο„Ξ± ΞΏΞ½Ο�ΞΌΞ±Ο„Ξ± Ο€ΞΏΟ… ΞΈΞ± ΞµΞΌΟ†Ξ±Ξ½Ξ―ΟƒΞΏΟ…ΞΌΞµ 
    JSONArray jsonArrayResults = null;//Ξ· ΞΊΞ»Ξ®ΟƒΞ· Ο„Ξ·Ο‚ Ο…Ο€Ξ·Ο�ΞµΟƒΞ―Ξ±Ο‚ google places Ξ±Ο€ΞΏΞΈΞ·ΞΊΞµΟ�ΞµΟ„Ξ±ΞΉ ΟƒΞµ Ξ­Ξ½Ξ± jsonArray
    double userLng, userLat; // ΞΏΞΉ ΟƒΟ…Ξ½Ο„ΞµΟ„Ξ±Ξ³ΞΌΞ­Ξ½ΞµΟ‚ Ο€ΞΏΟ… ΞµΞΉΟƒΞ¬Ξ³ΞµΞΉ ΞΏ Ο‡Ο�Ξ®ΟƒΟ„Ξ·Ο‚
    int radius; // Ξ±ΞΊΟ„Ξ―Ξ½Ξ± Ο€ΞΏΟ… ΞµΞΉΟƒΞ¬Ξ³ΞµΞΉ ΞΏ Ο‡Ο�Ξ®ΟƒΟ„Ξ·Ο‚
    String API_KEY = "AIzaSyCBRZ_YvwbWu4KMsugIWlKHLuAPjtaVoT4";
    boolean openNow=false; // openNow checkBox
   

//     * Creates new form PointsOfInterest 
    public PointsOfInterest() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        leftPanel = new javax.swing.JPanel();
        longitudeLabel = new javax.swing.JLabel();
        latitudeLabel = new javax.swing.JLabel();
        radiusLabel = new javax.swing.JLabel();
        categoryLabel = new javax.swing.JLabel();
        categoryScrollPane = new javax.swing.JScrollPane();
        categoryList = new javax.swing.JList();
        longitudeTextField = new javax.swing.JTextField();
        latitudeTextField = new javax.swing.JTextField();
        radiusTextField = new javax.swing.JTextField();
        rightPanel = new javax.swing.JPanel();
        pOIsLabel = new javax.swing.JLabel();
        distanceLabel = new javax.swing.JLabel();
        vicinityLabel = new javax.swing.JLabel();
        ratingLabel = new javax.swing.JLabel();
        poisScrollPane = new javax.swing.JScrollPane();
        resultsList = new javax.swing.JList();
        imageLabel = new javax.swing.JLabel();
        photoLabel = new javax.swing.JLabel();
        infoLabel = new javax.swing.JLabel();
        buttonPanel = new javax.swing.JPanel();
        retrievePOIsButton = new javax.swing.JButton();
        openNowCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Points Of Interest Explorer");

        longitudeLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        longitudeLabel.setText("Longitude:");

        latitudeLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        latitudeLabel.setText("Latitude:");

        radiusLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radiusLabel.setText("Radius (m):");

        categoryLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        categoryLabel.setText("Category");

        categoryList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Hotels", "Restaurants", "Cafe", "Night Club", "Car Rental","Museums", "Churches", "Hospitals","Pharmacy","Police","Post Office" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        categoryList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        categoryScrollPane.setViewportView(categoryList);

        /*
        */

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(leftPanelLayout.createSequentialGroup()
                        .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(latitudeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(longitudeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radiusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(latitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(radiusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(longitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(categoryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(categoryScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(latitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(latitudeLabel))
                .addGap(18, 18, 18)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(longitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(longitudeLabel))
                .addGap(18, 18, 18)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radiusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radiusLabel))
                .addGap(18, 18, 18)
                .addComponent(categoryLabel)
                .addGap(18, 18, 18)
                .addComponent(categoryScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pOIsLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pOIsLabel.setText("Points Of Interest:");

        distanceLabel.setText("     ");

        vicinityLabel.setText("     ");

        ratingLabel.setText("    ");

        DefaultListModel resultModel = new DefaultListModel();
        resultsList.setModel(resultModel);
        /*
        resultsList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        */
        resultsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        resultsList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                resultsListValueChanged(evt);
            }
        });
        poisScrollPane.setViewportView(resultsList);

        imageLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        imageLabel.setMaximumSize(new java.awt.Dimension(400, 150));

        photoLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        photoLabel.setText("Photo");

        infoLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        infoLabel.setText("Info");

        javax.swing.GroupLayout rightPanelLayout = new javax.swing.GroupLayout(rightPanel);
        rightPanel.setLayout(rightPanelLayout);
        rightPanelLayout.setHorizontalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imageLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(poisScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                    .addGroup(rightPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pOIsLabel)
                            .addComponent(distanceLabel)
                            .addComponent(photoLabel)
                            .addComponent(vicinityLabel)
                            .addComponent(ratingLabel))))
                .addContainerGap())
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(infoLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        rightPanelLayout.setVerticalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(pOIsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(poisScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(photoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(infoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(distanceLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(vicinityLabel)
                .addGap(18, 18, 18)
                .addComponent(ratingLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        distanceLabel.getAccessibleContext().setAccessibleName(categoryLabel.getName());

        retrievePOIsButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        retrievePOIsButton.setText("Retrieve POIs");
        retrievePOIsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retrievePOIsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(retrievePOIsButton, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(retrievePOIsButton, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
        );

        openNowCheckBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        openNowCheckBox.setText("Open now?");
        openNowCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openNowCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(openNowCheckBox)))
                .addGap(24, 24, 24)
                .addComponent(rightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(rightPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(openNowCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void clearLabels() {

        vicinityLabel.setText("Address : ");
        distanceLabel.setText("Distance from current position : ");
        ratingLabel.setText("Rating : ");
        imageLabel.setText(" ");
        imageLabel.setIcon(null);

    }

    private void retrievePOIsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retrievePOIsButtonActionPerformed
        // TODO add your handling code here:
        
// Ξ•ΞΉΟƒΞ±Ξ³Ο‰Ξ³Ξ® ΟƒΟ„ΞΏΞΉΟ‡ΞµΞ―Ο‰Ξ½ Ξ±Ο€ΞΏ Ο‡Ο�Ξ®ΟƒΟ„Ξ· ΞΊΞ±ΞΉ Ξ­Ξ»ΞµΞ³Ο‡ΞΏΟ‚
        try {
            userLng = Double.parseDouble(longitudeTextField.getText());
            userLat = Double.parseDouble(latitudeTextField.getText());
            radius = Integer.parseInt(radiusTextField.getText());
        } catch (NumberFormatException e) {
            System.out.println("Number format exception");
            JOptionPane.showMessageDialog(null, "Please enter data in the correct form : "
                    + "\nLatitude : 23.72"
                    + "\nLongitude : 37.97"
                    + "\nRadius : 700");
        }
        
        if (categoryList.isSelectionEmpty()) {
            System.out.println("List selection exception");
            JOptionPane.showMessageDialog(null, "Please select category");
        }

        String[] categoryStr = {"lodging", "food", "cafe", "night_club", "car_rental", "museum", "church", "hospital", "pharmacy", "police", "post_office"};
        String category = categoryStr[categoryList.getSelectedIndex()];
        
        
        //Ξ¤ΞΏ URL Ο€ΞΏΟ… ΞΊΞ±Ξ»ΞΏΟ�ΞΌΞµ
        String webServiceUrl = "https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=" + userLat + "," + userLng + "&radius=" + radius + "&opennow="+openNow+"&types=" + category + "&key=" + API_KEY;
        System.out.println("Get data from "+webServiceUrl);

        GetData getData = new GetData();
        jsonArrayResults = getData.getResults((webServiceUrl));

        //Ξ‘Ο€ΞΏΞΈΞ·ΞΊΞµΟ�ΞΏΟ…ΞΌΞµ Ο„Ξ± ΞΏΞ½Ο�ΞΌΞ±Ο„Ξ±
        nameArrayList.clear();
        for (int i = 0; i < jsonArrayResults.length(); i++) {
            try {               
                if (!((JSONObject) jsonArrayResults.get(i)).isNull("name"))
                    nameArrayList.add(((JSONObject) jsonArrayResults.get(i)).getString("name"));
                else nameArrayList.add("-NA-");         
            } catch (JSONException ex) {
                    Logger.getLogger(PointsOfInterest.class.getName()).log(Level.SEVERE, null, ex);
               }           
        }      
            
        DefaultListModel resultsModel = new DefaultListModel();

        //Ξ‘Ξ»Ο†Ξ±Ξ²Ξ·Ο„ΞΉΞΊΞ® Ο„Ξ±ΞΎΞΉΞ½Ο�ΞΌΞ·ΟƒΞ· Ο„Ο‰Ξ½ Ξ±Ο€ΞΏΟ„ΞµΞ»ΞµΟƒΞΌΞ¬Ο„Ο‰Ξ½
        Collections.sort(nameArrayList);
        if (jsonArrayResults.length() != 0) {
            for (int i = 0; i < jsonArrayResults.length(); i++) {
                resultsModel.addElement(nameArrayList.get(i));
            }
        } else resultsModel.addElement("No POIs available ");
        
        resultsList.setModel(resultsModel);
        clearLabels();
    }//GEN-LAST:event_retrievePOIsButtonActionPerformed


    private void resultsListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_resultsListValueChanged
        // TODO add your handling code here:
        clearLabels();
   
        //Ξ¤ΞΏ Ο�Ξ½ΞΏΞΌΞ± Ο„ΞΏΟ… ΞΌΞ­Ο�ΞΏΟ…Ο‚ Ο€ΞΏΟ… ΞµΟ€ΞΉΞ»Ξ­Ξ³Ο‰ 
        String selName = (String) resultsList.getSelectedValue();
       
        //Ξ•ΞΌΟ†Ξ¬Ξ½ΞΉΟƒΞ· Ο„Ο‰Ξ½ Ο€Ξ»Ξ·Ο�ΞΏΟ†ΞΏΟ�ΞΉΟ�Ξ½
        ShowData showData = new ShowData();
        for (int i = 0; i < jsonArrayResults.length(); i++) {
            try {
               if (((JSONObject) jsonArrayResults.get(i)).getString("name").equalsIgnoreCase(selName)) 
                    showData.placeToShow(jsonArrayResults, i);
            } catch (JSONException ex) {
                System.out.println("Name exception");
            }
        }
        
        if(selName!="No POIs nearby")
        {
            vicinityLabel.setText("Address : " + showData.vicinity);
            ratingLabel.setText("Rating : " + showData.rating);
            DecimalFormat formatter = new DecimalFormat("#");
            distanceLabel.setText("Distance from current position : " + formatter.format(showData.haversineDistance(showData.lat, showData.lng, userLat, userLng)) + " m");

            if (showData.photoRef != null) {
                String path = "https://maps.googleapis.com/maps/api/place/photo?maxwidth=300&maxheight=200&photoreference=" + showData.photoRef + "&key=" + API_KEY;
                System.out.println("Get Image from " + path);
                try {
                    BufferedImage image = showData.getImage(path);
                    ImageIcon icon = new ImageIcon(image);
                    imageLabel.setIcon(icon);
                } catch (IOException ex) {
                    Logger.getLogger(PointsOfInterest.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else imageLabel.setText("No photo available");   
        } else clearLabels();
    }//GEN-LAST:event_resultsListValueChanged

    private void openNowCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openNowCheckBoxActionPerformed
        // TODO add your handling code here:
         if (openNowCheckBox.isSelected())
             openNow=true;
         else openNow=false;   
    }//GEN-LAST:event_openNowCheckBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PointsOfInterest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PointsOfInterest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PointsOfInterest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PointsOfInterest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PointsOfInterest().setVisible(true);
            }
        });

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JPanel buttonPanel;
    javax.swing.JLabel categoryLabel;
    javax.swing.JList categoryList;
    javax.swing.JScrollPane categoryScrollPane;
    javax.swing.JLabel distanceLabel;
    javax.swing.JLabel imageLabel;
    javax.swing.JLabel infoLabel;
    javax.swing.JLabel latitudeLabel;
    javax.swing.JTextField latitudeTextField;
    javax.swing.JPanel leftPanel;
    javax.swing.JLabel longitudeLabel;
    javax.swing.JTextField longitudeTextField;
    javax.swing.JCheckBox openNowCheckBox;
    javax.swing.JLabel pOIsLabel;
    javax.swing.JLabel photoLabel;
    javax.swing.JScrollPane poisScrollPane;
    javax.swing.JLabel radiusLabel;
    javax.swing.JTextField radiusTextField;
    javax.swing.JLabel ratingLabel;
    javax.swing.JList resultsList;
    javax.swing.JButton retrievePOIsButton;
    javax.swing.JPanel rightPanel;
    javax.swing.JLabel vicinityLabel;
    // End of variables declaration//GEN-END:variables

}
